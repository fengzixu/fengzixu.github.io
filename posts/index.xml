<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Littledriver</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Littledriver</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>©2020 Littledriver.</copyright>
    <lastBuildDate>Mon, 04 May 2020 17:59:42 +0900</lastBuildDate>
    
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Paper Note — MapReduce</title>
      <link>/posts/papaer-node-for-mapreduce/</link>
      <pubDate>Mon, 04 May 2020 17:59:42 +0900</pubDate>
      
      <guid>/posts/papaer-node-for-mapreduce/</guid>
      <description>Overview If you are a software engineer, you must hear a tech concept — “MapReduce”. It is quite popular in the processing dataset on the large scale cluster. It was created by Google in 2004. With the development of technology, maybe Google has a new awesome method, but MapReduce has become an important sample for learning the principle of the distributed system.
This blog is a kind of paper note. Because I am learning the 6.</description>
    </item>
    
    <item>
      <title>几个和网络分层有关的问题</title>
      <link>/posts/some-questions-about-layers-of-network-protocol/</link>
      <pubDate>Sat, 11 Jan 2020 22:49:03 +0900</pubDate>
      
      <guid>/posts/some-questions-about-layers-of-network-protocol/</guid>
      <description>Q1: TCP 在进行三次握手的时候，IP层和MAC对应都有什么操作呢？ PS: 这里IP层和MAC层的说法是不准确的，应该是网络层和数据链路层。但是为了方便理</description>
    </item>
    
    <item>
      <title>The smallest schedulable unit in Kubernetes — Pod</title>
      <link>/posts/understand-pod-concept/</link>
      <pubDate>Sun, 01 Dec 2019 21:24:59 +0900</pubDate>
      
      <guid>/posts/understand-pod-concept/</guid>
      <description>Overview As I have mentioned in the previous blog, lots of technologies the Kubernetes relies on are created with the help of the operating system. For example, the container is the specific process that corporates with the CGroup and Linux Namespace on OS. However, there is another essential OS concept used in Kubernetes: process group. It means one process group includes several processes. Those kinds of processes have a super affinity relationship.</description>
    </item>
    
    <item>
      <title>Kubernetes 的基石 — 容器技术</title>
      <link>/posts/understand-container-technology/</link>
      <pubDate>Sun, 15 Sep 2019 14:24:59 +0900</pubDate>
      
      <guid>/posts/understand-container-technology/</guid>
      <description>Overview 随着容器技术的诞生和发展，它不再仅仅是一个发布你所开发软件的新姿势，更是在后端开发生态中，慢慢的成为了工程师开发模式的一部分。 容器技术最核</description>
    </item>
    
  </channel>
</rss>